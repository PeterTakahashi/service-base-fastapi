apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-app
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      serviceAccountName: fastapi
      imagePullSecrets:
        - name: dockerhub-credentials
      containers:
        - name: fastapi
          image: takahashiseiya/service-base-fastapi-web:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: db-url
                  key: DATABASE_URL
            - name: GITHUB_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: github-oauth
                  key: GITHUB_OAUTH_CLIENT_ID
            - name: GITHUB_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: github-oauth
                  key: GITHUB_OAUTH_CLIENT_SECRET
            - name: GOOGLE_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: google-oauth
                  key: GOOGLE_OAUTH_CLIENT_ID
            - name: GOOGLE_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: google-oauth
                  key: GOOGLE_OAUTH_CLIENT_SECRET
          readinessProbe:
            httpGet:
              path: /up
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.10.1
          args:
            - "--structured-logs"
            - "--private-ip"
            - "--port=5432"
            - "aiproject-460606:us-central1:service-base-auth-production-postgres"
          ports:
            - containerPort: 5432
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
